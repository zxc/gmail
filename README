
  gmail.py - interact with Gmail through python
  ---------------------------------------------

- gmail.py wraps imaplib and smtplib to make it easier to interact with
  your Gmail account through python.

- Examples:

    - Login (this automatically connects to IMAP and SMTP) and then out:

        > import gmail
        > conn = gmail.Gmail('username', 'password')
        > # do stuff...
        > conn.logout()

    - Interact with labels:
        
        > conn.labels.switch('sent')
        1567 # Number of emails in that label
        > conn.labels.create('mylabel')
        > conn.labels.delete('mylabel')
        > conn.labels.exists('foo')
        False
        > len(conn.labels.all())
        25

    - Search email:
        
        > # Chainable queries
        > conn.search.subject('foo').to('alternate@gmail.com')
        > conn.search.unread()
        > msgs = conn.search.all()
        > # msgs will be unread emails sent to 'alternate@gmail.com'
        > # with 'foo' in the subject

    - Download email:
        
        > msgs = conn.search.unread().all()
        > msgs 
        [<gmail.Message object...]
        > msgs[0].subject()
        'V1agra for Sale! #1 ONLINE PHARMACY!'
        > msgs = conn.all()

    - Send email:

        > msg = gmail.Message().fill('you@gmail.com', 'me@gmail.com',
        ... 'fwd: fwd: funny', 'pictures of cats')
        > msg.to_addresses()
        ['you@gmail.com']
        > msg.subject()
        'fwd: fwd: funny'
        > conn.send(msg)

- Notes:

    - Messages are not downloaded when they are created.  They store their id
      and a reference to your IMAP connection.  When you first try to read 
      anything from them, they download.

    - Basically zero error handling is done right now.

    - Better usage examples coming soon.
